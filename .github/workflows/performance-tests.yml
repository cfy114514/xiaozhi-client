name: Performance Tests

on:
  # 手动触发
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of performance test to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - stress
          - memory
  
  # 每周运行一次
  schedule:
    - cron: '0 2 * * 0' # 每周日凌晨2点
  
  # PR 到 main 分支时运行（可选）
  pull_request:
    branches: [ main ]
    paths:
      - 'src/performance/**'
      - 'src/logger/**'
      - 'src/services/PerformanceMonitor.ts'

jobs:
  performance-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Run type check
      run: pnpm type:check
    
    - name: Run all performance tests
      if: ${{ github.event.inputs.test_type == 'all' || github.event.inputs.test_type == '' }}
      run: pnpm test:performance
      env:
        NODE_OPTIONS: '--max-old-space-size=4096'
    
    - name: Run stress tests only
      if: ${{ github.event.inputs.test_type == 'stress' }}
      run: pnpm test:stress
      env:
        NODE_OPTIONS: '--max-old-space-size=4096'
    
    - name: Run memory tests only
      if: ${{ github.event.inputs.test_type == 'memory' }}
      run: pnpm test:memory
      env:
        NODE_OPTIONS: '--max-old-space-size=4096'
    
    - name: Upload performance test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-test-results-node-${{ matrix.node-version }}
        path: |
          performance-test-results.json
          coverage/
        retention-days: 30
    
    - name: Comment PR with performance results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          try {
            const results = JSON.parse(fs.readFileSync('performance-test-results.json', 'utf8'));
            const comment = `## 🚀 Performance Test Results (Node.js ${{ matrix.node-version }})
            
            **Test Summary:**
            - Total Tests: ${results.numTotalTests}
            - Passed: ${results.numPassedTests}
            - Failed: ${results.numFailedTests}
            - Duration: ${(results.testResults[0]?.perfStats?.runtime || 0 / 1000).toFixed(2)}s
            
            ${results.numFailedTests > 0 ? '⚠️ Some performance tests failed. Please check the logs.' : '✅ All performance tests passed!'}
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.log('No performance test results found or error reading results:', error.message);
          }

  performance-benchmark:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event.inputs.test_type == 'all'
    timeout-minutes: 60
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Run extended performance benchmark
      run: |
        echo "Running extended performance benchmark..."
        VITEST_INCLUDE_PERFORMANCE=true pnpm vitest run --config vitest.performance.config.ts
      env:
        NODE_OPTIONS: '--max-old-space-size=8192 --expose-gc'
    
    - name: Generate performance report
      run: |
        echo "## Performance Benchmark Report" > performance-report.md
        echo "Generated on: $(date)" >> performance-report.md
        echo "" >> performance-report.md
        if [ -f performance-test-results.json ]; then
          echo "### Test Results Summary" >> performance-report.md
          node -e "
            const results = require('./performance-test-results.json');
            console.log(\`- Total Tests: \${results.numTotalTests}\`);
            console.log(\`- Passed: \${results.numPassedTests}\`);
            console.log(\`- Failed: \${results.numFailedTests}\`);
            console.log(\`- Duration: \${(results.testResults[0]?.perfStats?.runtime / 1000 || 0).toFixed(2)}s\`);
          " >> performance-report.md
        fi
    
    - name: Upload benchmark results
      uses: actions/upload-artifact@v4
      with:
        name: performance-benchmark-report
        path: |
          performance-report.md
          performance-test-results.json
        retention-days: 90
